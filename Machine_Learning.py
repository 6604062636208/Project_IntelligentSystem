import streamlit as st
import pandas as pd

st.set_page_config(page_title="Intelligent-System-project", layout="wide")

st.sidebar.header("Navigation")
st.sidebar.page_link("Machine_Learning.py", icon="ü§ñ", disabled=True)
st.sidebar.page_link("pages/Neural_Network.py", icon="üß†")
st.sidebar.page_link("pages/Demo_Machine_Learning.py", icon="üìä")
st.sidebar.page_link("pages/Demo_Neural_Network.py", icon="üìà")

st.markdown('<h1 style="font-size: 40px;">ü§ñ Machine Learning Deployment</h1>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

with st.expander("üìå **Machine Learning ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£!**"):
    st.info("""
    **Machine Learning ‡∏Ñ‡∏∑‡∏≠** ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏≠‡∏á ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö  
    - ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå‡∏Ñ‡∏≠‡∏¢‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà ‡πÜ  
    - ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ **‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á** ‡∏ï‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á  
    - **‡∏ä‡πà‡∏ß‡∏¢‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°** ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏•‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô  
    """)

with st.expander("üìå **‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Ç‡∏≠‡∏á Machine Learning!**"):
    st.info("""
    **Machine Learning** ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏ó‡∏≥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢ ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏à‡∏¥‡∏ô‡∏ï‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤  
    - **Google Maps**: ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î  
    - **Google Translate**: ‡∏ô‡∏≥ Automation ‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö Machine Learning ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏∂‡πâ‡∏ô  
    - **Speech-to-Text** (‡πÄ‡∏ä‡πà‡∏ô LINE Chat): ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå  
    """)

st.markdown('''
    <p style="font-size: 20px;">
        <a href="https://www.kaggle.com/datasets/sandeep1080/epidemiological-bmi-of-children-by-gender" 
           target="_blank" style="font-size: 25px; color: blue;">
           Kaggle.com
        </a>.
        <br>
        <a href="https://drive.google.com/file/d/1EWIfZ99J1-XDTkOBas6BDpMhJQxyBObk/view" 
           target="_blank" style="font-size: 25px; color: red;">
           Child Weight Categories CSV File
        </a>.
    </p>
''', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('<h1 style="font-size: 40px;">üìö ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö</h1>', unsafe_allow_html=True)
st.markdown('''
    <p style="font-size: 20px;">
        ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏°‡∏ß‡∏•‡∏Å‡∏≤‡∏¢ (BMI) ‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏™‡∏Å‡∏≠‡∏ï‡πÅ‡∏•‡∏ô‡∏î‡πå‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏õ‡∏µ ‡∏û.‡∏®. 2544 ‡∏ñ‡∏∂‡∏á ‡∏û.‡∏®. 2566 ‡πÇ‡∏î‡∏¢
        ‡πÅ‡∏à‡∏Å‡πÅ‡∏à‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÄ‡∏û‡∏® ‡πÅ‡∏•‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡πÇ‡∏î‡∏¢‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ Scottish Health Survey ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á
        ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•‡∏™‡∏Å‡∏≠‡∏ï‡πÅ‡∏•‡∏ô‡∏î‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡πá‡∏Å ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
        ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô‡πÉ‡∏ô‡πÄ‡∏î‡πá‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ï‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û
            
        ‡∏Ç‡πâ‡∏≠‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏ö‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
            - ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô‡πÉ‡∏ô‡πÄ‡∏î‡πá‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏õ‡∏µ ‡∏û.‡∏®. 2544 ‡∏ñ‡∏∂‡∏á ‡∏û.‡∏®. 2566
            - ‡πÄ‡∏î‡πá‡∏Å‡∏ä‡∏≤‡∏¢‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡πá‡∏Å‡∏´‡∏ç‡∏¥‡∏á
            - ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô‡∏à‡∏∞‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≠‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™
            - ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô‡∏à‡∏∞‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡πÄ‡∏î‡πá‡∏Å‡πÇ‡∏ï
    </p>
''', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('<h1 style="font-size: 40px;">üìä Features ‡∏´‡∏•‡∏±‡∏Å‡πÜ ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Dataset ‡∏ô‡∏µ‡πâ</h1>', unsafe_allow_html=True)
with st.expander("üìå **Click Here to Learn More!**"):
    st.markdown("""
    - **SchoolYear**: The academic year;**Text**
    - **NameHospital**: Hospital or hospital board name;**Text**
    - **Sex**: The child's gender (Male/Female);**Text**
    - **EpiUnderweight**: Children with underweight BMI;**Number**
    - **EpiHealthyWeight**: Children with healthy weight BMI;**Number**
    - **EpiOverweight**: Children with overweight BMI;**Number**
    - **EpiObese**: Children with obesity;**Number**
    - **EpiOverweightAndObese**: Combined Children of overweight and obese;**Number**
    - **ValidCounts**: Valid child entries;**Number**
    - **UnvalidCounts**: Invalid child entries;**Number**
    - **TotalCounts**: Number of children;**Number**
    """, unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <h1 style="font-size: 40px; color: #FF5733;">
        üõ†Ô∏è 1. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    </h1>
""", unsafe_allow_html=True)

st.markdown("""
    <div style="
        background-color: #000000; 
        padding: 20px; 
        border-radius: 12px;
        box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
        margin: 20px 0px;
    ">
        <p style="font-size: 20px; color: #F5FFFA; line-height: 1.8;">
            üîç <b style="color: #FF5733;">‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</b> ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•  
            ‡πÇ‡∏î‡∏¢‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•  
            ‡∏ã‡∏∂‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ 4 ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà:
        </p>
        <div 
            <ul style="font-size: 18px; color: #F5FFFA; line-height: 1.6;">
                <li>‚ú® <b style="color: #FF5733;">‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</b> - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏≤ Missing ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥</li>
                <li>üìä <b style="color: #FF5733;">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</b> - ‡∏õ‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö</li>
                <li>üîÑ <b style="color: #FF5733;">‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</b> - ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°</li>
                <li>üéØ <b style="color: #FF5733;">‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</b> - ‡∏ï‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≠‡∏Å</li>
            </ul>
        </div>
    </div>
""", unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <h1 style="font-size: 35px; color: #FF5733;">
        üìå 1.1 BMIData
    </h1>
""", unsafe_allow_html=True)

with st.expander("üìå **Click Here to Learn More!**"):
    st.markdown("""
        <h3 style="color: #FF5733;">üìã ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• BMIData</h3>
        <ul style="font-size: 18px; line-height: 1.6; color: #F5FFFA;">
            <li><b>SchoolYear</b> üóì - ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</li>
            <li><b>NameHospital</b> üè• - ‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•</li>
            <li><b>Sex</b> üöª - ‡πÄ‡∏û‡∏® (‡∏ä‡∏≤‡∏¢/‡∏´‡∏ç‡∏¥‡∏á)</li>
            <li><b>EpiUnderweight</b> ‚öñ - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå</li>
            <li><b>EpiHealthyWeight</b> üí™ - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏õ‡∏Å‡∏ï‡∏¥</li>
            <li><b>EpiOverweight</b> üçî - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô</li>
            <li><b>EpiObese</b> üõë - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏≠‡πâ‡∏ß‡∏ô</li>
            <li><b>TotalCounts</b> üî¢ - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</li>
        </ul>

        <h3 style="color: #FF5733;">üõ† ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
        <ul style="font-size: 18px; color: #F5FFFA; line-height: 1.6;">
            <li>‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡πà‡∏≤ <b>Missing ‡πÅ‡∏•‡∏∞ Outliers</b></li>
            <li>üîÑ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏õ‡∏•‡∏á <b>Sex</b> ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç</li>
            <li>üìä ‡∏™‡∏£‡πâ‡∏≤‡∏á <b>Features ‡πÉ‡∏´‡∏°‡πà</b> ‡πÄ‡∏ä‡πà‡∏ô ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì <b>‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÄ‡∏î‡πá‡∏Å‡∏≠‡πâ‡∏ß‡∏ô</b> ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•</li>
        </ul>
    """, unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('<h1 style="font-size: 40px;">Show DataFrame As Dataset</h1>', unsafe_allow_html=True)
df = pd.read_csv("Dataset/BMIData.csv")  
st.dataframe(df)  

st.write("<br><br>", unsafe_allow_html=True)

st.markdown('## Code Example')
code = '''
    # ‡∏î‡∏π‡∏´‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Dataset ‡∏ô‡∏µ‡πâ
    df.head()
'''
st.code(code, language="python")

st.markdown('<h5 style="font-size: 20px;">‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ header</h5>', unsafe_allow_html=True)
st.image("images/1.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
    df.info()
    df.describe()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h5>', unsafe_allow_html=True)
st.image("images/2.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Missing Values ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤
    df.isnull().sum()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ (Missing Values) ‡πÉ‡∏ô DataFrame ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏à‡∏∞‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå</h5>', unsafe_allow_html=True)
st.image("images/3.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    df.duplicated().sum()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡πÉ‡∏ô DataFrame ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡πÑ‡∏õ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå</h5>', unsafe_allow_html=True)
st.image("images/4.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    sns.histplot(df['EpiOverweightAndObese'], kde=True)
    plt.show()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏™‡∏£‡πâ‡∏≤‡∏á Histogram ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå EpiOverweightAndObese ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</h5>', unsafe_allow_html=True)
st.image("images/5.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà (Feature Engineering)
    df['OverweightRatio'] = df['EpiOverweightAndObese'] / df['TotalCounts']
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà
    df.head()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà OverweightRatio ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏î‡∏¥‡∏° ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ Feature Engineering ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Machine Learning ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô</h5>', unsafe_allow_html=True)
st.image("images/6.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô categorical ‡πÄ‡∏£‡∏≤‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô numerical
    df = pd.get_dummies(df, columns=['Sex', 'NameHospital'], drop_first=True)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
    df.head()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Categorical ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Sex ‡πÅ‡∏•‡∏∞ NameHospital ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Numerical ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ One-Hot Encoding ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Machine Learning</h5>', unsafe_allow_html=True)
st.image("images/7.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô Train ‡πÅ‡∏•‡∏∞ Test Set
    from sklearn.model_selection import train_test_split

    # ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏ä‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    X = df.drop('EpiOverweightAndObese', axis=1)
    y = df['EpiOverweightAndObese']

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    print(X_train.shape, X_test.shape)
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏ä‡∏∏‡∏î ‡∏Ñ‡∏∑‡∏≠ ‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å (Training Set) ‡πÅ‡∏•‡∏∞ ‡∏ä‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö (Testing Set) ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏• Machine Learning</h5>', unsafe_allow_html=True)
st.image("images/8.jpg")

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Scaling)
    # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
    from sklearn.preprocessing import StandardScaler

    # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    scaler = StandardScaler()
    X_train = scaler.fit_transform(X_train)
    X_test = scaler.transform(X_test)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î
    print(X_train[:5])
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Data Scaling) ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ Standardization ‡∏î‡πâ‡∏ß‡∏¢ StandardScaler ‡∏à‡∏≤‡∏Å‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ scikit-learn ‡πÉ‡∏ô‡∏ä‡∏∏‡∏î‡∏ù‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏ä‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Standardization ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ó‡∏µ‡πà‡∏ô‡∏¥‡∏¢‡∏°‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Machine Learning</h5>', unsafe_allow_html=True)
st.image("images/9.jpg")

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <h1 style="font-size: 40px; color: #FF5733;">
        üìö 2. ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°
    </h1>
""", unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <div style="
        background-color: #1E1E1E; 
        padding: 25px; 
        border-radius: 12px;
        box-shadow: 3px 3px 12px rgba(255,255,255,0.2);
        margin: 20px 0px;
    ">
        <p style="font-size: 22px; color: #F8F8FF; line-height: 1.8; font-weight: bold;">
            ‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡πá‡∏Å‡∏î‡πâ‡∏ß‡∏¢ <b>Machine Learning</b> <br>
            ‡πÉ‡∏ä‡πâ <b>Random Forest</b> ‡∏´‡∏£‡∏∑‡∏≠ <b>Logistic Regression</b> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ 
            ‡∏ß‡πà‡∏≤‡πÄ‡∏î‡πá‡∏Å‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° <span style="color: lightgreen;">"Healthy"</span> ‡∏´‡∏£‡∏∑‡∏≠  
            <span style="color: #FF6347;">"Overweight/Obese"</span>
        </p>
    <div 
        <h3 style="color: #FF5733;">1. Random Forest Algorithm</h3>
        <p style="color: #F8F8FF;">‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡πÅ‡∏ö‡∏ö <b>Ensemble Learning</b> ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏≤‡∏¢ <b>Decision Trees</b> ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô 
        ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏°‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏™‡∏π‡∏á‡πÅ‡∏•‡∏∞‡∏•‡∏î Overfitting ‡πÑ‡∏î‡πâ‡∏î‡∏µ</p>
    </div>
    <div 
        <h4 style="color: #FFA07A;"> üîπ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Random Forest:</h4>
        <ul style="color: #F8F8FF;">
            <li><b>Bootstrap Sampling:</b> ‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡πâ‡∏ô</li>
            <li><b>Feature Selection:</b> ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ</li>
            <li><b>Decision Tree Construction:</b> ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô</li>
            <li><b>Majority Voting:</b> ‡∏ô‡∏≥‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏°‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏°‡∏≤‡∏Å</li>
        </ul>
    </div>
    <div 
        <h3 style="color: #FF5733;">2. Logistic Regression</h3>
        <p style="color: #F8F8FF;">‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö <b>Binary Classification</b> ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏™‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞ 
        <b>Sigmoid Function</b> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 0-1 ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ Threshold ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>
    </div>
    <div
        <h4 style="color: #FFA07A;"> üîπ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Logistic Regression:</h4>
        <ul style="color: #F8F8FF;">
            <li><b>‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÇ‡∏≠‡∏Å‡∏≤‡∏™:</b> ‡πÉ‡∏ä‡πâ‡∏™‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏î‡πá‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô "Overweight/Obese"</li>
            <li><b>‡πÉ‡∏ä‡πâ Sigmoid Function:</b> ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0 ‡∏ñ‡∏∂‡∏á 1</li>
            <li><b>‡∏Å‡∏≥‡∏´‡∏ô‡∏î Threshold:</b> ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô > 0.5 ‡∏à‡∏±‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° "Overweight/Obese"</li>
        </ul>
    </div>
        <div 
            <h3 style="color: #FF5733;">üîπ ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á Random Forest ‡πÅ‡∏•‡∏∞ Logistic Regression</h3>
            <table style="color: #F8F8FF; width: 100%; border-collapse: collapse; border: 1px solid white; text-align: center;">
                <tr style="background-color: #333;">
                    <th style="padding: 12px; border: 1px solid white;">‡πÄ‡∏Å‡∏ì‡∏ë‡πå</th>
                    <th style="padding: 12px; border: 1px solid white;">Random Forest</th>
                    <th style="padding: 12px; border: 1px solid white;">Logistic Regression</th>
                </tr>
                <tr>
                    <td style="padding: 10px; border: 1px solid white;">‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£</td>
                    <td style="padding: 10px; border: 1px solid white;">‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô</td>
                    <td style="padding: 10px; border: 1px solid white;">‡πÉ‡∏ä‡πâ‡∏™‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏™‡πâ‡∏ô + Sigmoid Function</td>
                </tr>
                <tr style="background-color: #222;">
                    <td style="padding: 10px; border: 1px solid white;">‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥</td>
                    <td style="padding: 10px; border: 1px solid white;">‡∏™‡∏π‡∏á</td>
                    <td style="padding: 10px; border: 1px solid white;">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</td>
                </tr>
                <tr>
                    <td style="padding: 10px; border: 1px solid white;">‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</td>
                    <td style="padding: 10px; border: 1px solid white;">‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô</td>
                    <td style="padding: 10px; border: 1px solid white;">‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢</td>
                </tr>
                <tr style="background-color: #222;">
                    <td style="padding: 10px; border: 1px solid white;">‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß</td>
                    <td style="padding: 10px; border: 1px solid white;">‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤</td>
                    <td style="padding: 10px; border: 1px solid white;">‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤</td>
                </tr>
            </table>
        </div>
    </div>
""", unsafe_allow_html=True)

st.write("<br><br>", unsafe_allow_html=True)
st.markdown("""
    <h1 style="font-size: 40px; color: #FF5733;">
        üöÄ 2.1 Machine Learning Model (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö BMIData)
    </h1>
""", unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <div style="background-color: #000000; padding: 15px; border-radius: 10px;">
        <h3 style="color: #F8F8FF;">üîç ‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:</h3>
        <ul style="font-size: 18px; line-height: 1.6;">
            <li><b style="color: #e74c3c;">Random Forest</b> üå≤ <b style="color: #F8F8FF;">- ‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏≤‡∏¢‡πÜ Decision Trees ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î Overfitting</b></li>
            <li><b style="color: #2ecc71;">Logistic Regression</b> ‚ûó <b style="color: #F8F8FF;">- ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Classification ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏Ñ‡πà 2 ‡∏Ñ‡∏•‡∏≤‡∏™</b></li>
        </ul>
        <h3 style="color: #F8F8FF;">üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•:</h3>
        <p style="font-size: 18px; color: #F8F8FF;">
            ‚úÖ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏î‡πá‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° 
            <b style="color: #27ae60;">"Healthy"</b> üèÉ‚Äç‚ôÇÔ∏è ‡∏´‡∏£‡∏∑‡∏≠ 
            <b style="color: #e67e22;">"Overweight/Obese"</b> üçî
        </p>
    </div>
""", unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <h1 style="font-size: 40px; color: #FF5733;">
        üìö 3. ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•
    </h1>
""", unsafe_allow_html=True)

st.markdown("""
    <h1 style="font-size: 40px; color: #FF5733;">
        üöÄ 3.1 Machine Learning (BMIData)
    </h1>
""", unsafe_allow_html=True)

with st.expander("üìå **‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•!**"):
    st.markdown("""
        <div style="
            background-color: #1E1E1E; 
            padding: 25px; 
            border-radius: 12px;
            box-shadow: 3px 3px 12px rgba(255,255,255,0.2);
            margin: 20px 0px;
        ">
            <ul style="color: #F8F8FF; font-size: 18px; line-height: 1.6;">
                <li>üì• <b>‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</b> ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥ Data Preprocessing</li>
                <li>üìä <b>‡∏™‡∏£‡πâ‡∏≤‡∏á Features ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</b> ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÄ‡∏î‡πá‡∏Å‡∏≠‡πâ‡∏ß‡∏ô</li>
                <li>ü§ñ <b>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏• Machine Learning</b> (Random Forest / Logistic Regression)</li>
                <li>‚öôÔ∏è <b>Train ‡πÅ‡∏•‡∏∞ Evaluate ‡πÇ‡∏°‡πÄ‡∏î‡∏•</b> ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ accuracy_score ‡πÅ‡∏•‡∏∞ confusion_matrix</li>
                <li>üíæ <b>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå pickle</b> ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ</li>
            </ul>
        </div>
    """, unsafe_allow_html=True)

st.markdown('## Code Example')
code = '''
    from sklearn.linear_model import LogisticRegression
    from sklearn.metrics import accuracy_score

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Logistic Regression
    model = LogisticRegression()

    # ‡∏ù‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•
    model.fit(X_train, y_train)

    # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    y_pred = model.predict(X_test)

    # ‡∏ß‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•
    accuracy = accuracy_score(y_test, y_pred)
    print(f'Accuracy: {accuracy}')
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Logistic Regression ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏Ñ‡πà‡∏≤ EpiOverweightAndObese ‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏ù‡∏∂‡∏Å‡∏ù‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ Accuracy Score.</h5>', unsafe_allow_html=True)

code = '''
    from sklearn.ensemble import RandomForestRegressor

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Random Forest
    rf_model = RandomForestRegressor(n_estimators=100, random_state=42)

    # ‡∏ù‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•
    rf_model.fit(X_train, y_train)

    # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    y_pred_rf = rf_model.predict(X_test)

    # ‡∏ß‡∏±‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•
    mse_rf = mean_squared_error(y_test, y_pred_rf)
    print(f'Random Forest Mean Squared Error: {mse_rf}')
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Random Forest Regressor ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤ EpiOverweightAndObese ‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏ù‡∏∂‡∏Å‡∏ù‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ Mean Squared Error.</h5>', unsafe_allow_html=True)

code = '''
    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Accuracy
    accuracy = accuracy_score(y_test, y_pred)
    print(f'Accuracy: {accuracy:.2f}')

    # ‡πÅ‡∏™‡∏î‡∏á Confusion Matrix
    conf_matrix = confusion_matrix(y_test, y_pred)
    print('Confusion Matrix:')
    print(conf_matrix)
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• Classification ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Accuracy ‡πÅ‡∏•‡∏∞ Confusion Matrix</h5>', unsafe_allow_html=True)